---
date: 2017-05-13 16:58
status: public
title: dom4j修改xml
---

[参考网站](http://www.jianshu.com/p/e8561ea99d03)

```java
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.util.Iterator;
import java.util.List;

import org.dom4j.Attribute;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.io.OutputFormat;
import org.dom4j.io.SAXReader;
import org.dom4j.io.XMLWriter;

public class Dom4jParser {
	public static void main(String[] args) {
		SAXReader reader = new SAXReader();
		try{
			Document document = reader.read("src/dom4jXml/person.xml");
			Element root = document.getRootElement();
			readAllNodes(root);
			ModifyNode(document,"lisi","2300","creditcard");
			addNode(document);
			
			
		}catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public static void readAllNodes(Element root)
	{
		Element node = root;
		System.out.println("当前节点的名称:"+node.getName());
		//像这种容器要注意导入包的正确性，如果容器包导入错了，后面的包的导入也会出现问题
		List<Attribute> list = node.attributes();
		for(Attribute attr : list)
		{
			System.out.println(attr.getText() + "  " + attr.getName()
			+ "  " + attr.getValue());
		}
		
		if (!(node.getTextTrim().equals(""))) {
			System.out.println("文本内容:：" + node.getText());
		}
		
		//当前节点下面子节点迭代器
		Iterator<Element> it = node.elementIterator();
		
		while(it.hasNext())
		{
			//获取某个子节点对象
			Element e = it.next();
			//遍历子节点
			readAllNodes(e);
		}
		
	}
	
	public static void writerAllNodes(Document doc) throws Exception
	{
		// 紧凑的格式
		// OutputFormat format = OutputFormat.createCompactFormat();
		// 排版缩进的格式
		OutputFormat format = OutputFormat.createPrettyPrint();
		format.setEncoding("utf-8");
		
		 //将相关内容输出到xml文档中去
        //注意：这里不能使用FileWriter("xml/book.xml")因为这种方式是输出字符流，于是会按照默认编码
        //gb2312进行输出，所以这里需要使用字节流FileOutputStream进行输出
        XMLWriter writer = new XMLWriter(new FileOutputStream("src/dom4jXml/person.xml"), format);
        writer.write(doc);
        writer.close();
	}
	
	public static void ModifyNode(Document doc, String name, String monthPay, String mode) throws Exception{
		Element root = doc.getRootElement();
		List nodes = root.elements("employee");
		for(Iterator it=nodes.iterator(); it.hasNext();)
		{
			Element elm = (Element) it.next();
			if(name.equals(elm.element("name").getText()))
			{
				Element monPayElm = elm.element("monthly_pay");
				monPayElm.setText(monthPay);
				monPayElm.attribute("mode").setText(mode);
				writerAllNodes(doc);
				break;
			}
		}
	}
	
	
	//两种的插入方法
	public static void addNode(Document doc)throws Exception{
		Element root = doc.getRootElement();
		Element employee = DocumentHelper.createElement("employee");
		employee.addAttribute("sn","E-30000232323022");
		List list = root.elements("employee");
		//List list = root.elements("employee").elements();是"employee"下面的标签
		System.out.print(list.size());
		list.add(list.size(),employee);
		Element name = DocumentHelper.createElement("name");
		name.setText("hejiangguo");
		Element age = DocumentHelper.createElement("age");
		age.setText("26");
		Element monthlyPay = DocumentHelper.createElement("monthly-pay");
		monthlyPay.setText("1900");
		employee.add((Element)name.clone());
		employee.add((Element)age.clone());
		employee.add((Element)monthlyPay.clone());
		writerAllNodes(doc);
	}
	
}
```